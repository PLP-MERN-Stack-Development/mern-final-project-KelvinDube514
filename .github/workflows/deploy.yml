name: Deploy to Production

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  NODE_VERSION: '20.x'

jobs:
  test:
    name: Run Tests
    uses: ./.github/workflows/test.yml

  deploy-backend:
    name: Deploy Backend
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json
      
      - name: Install dependencies
        working-directory: ./backend
        run: npm ci --only=production
      
      - name: Build Docker image
        working-directory: ./backend
        run: |
          docker build -t community-safe-path-backend:${{ github.sha }} .
          docker tag community-safe-path-backend:${{ github.sha }} community-safe-path-backend:latest
      
      - name: Login to Container Registry
        continue-on-error: true
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Push Docker image
        continue-on-error: true
        run: |
          docker push community-safe-path-backend:${{ github.sha }}
          docker push community-safe-path-backend:latest
      
      - name: Deploy to Render/Railway/Heroku
        continue-on-error: true
        env:
          DEPLOY_HOOK_URL: ${{ secrets.BACKEND_DEPLOY_HOOK }}
        run: |
          if [ -n "$DEPLOY_HOOK_URL" ]; then
            curl -X POST $DEPLOY_HOOK_URL
          else
            echo "BACKEND_DEPLOY_HOOK not configured, skipping deployment hook"
          fi
      
      - name: Verify deployment
        continue-on-error: true
        env:
          BACKEND_URL: ${{ secrets.BACKEND_URL }}
        run: |
          if [ -n "$BACKEND_URL" ]; then
            sleep 30
            curl -f $BACKEND_URL/health || exit 1
          else
            echo "BACKEND_URL not configured, skipping verification"
          fi

  deploy-frontend:
    name: Deploy Frontend
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      
      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci
      
      - name: Build application
        working-directory: ./frontend
        env:
          VITE_API_URL: ${{ secrets.VITE_API_URL }}
          VITE_GOOGLE_MAPS_API_KEY: ${{ secrets.VITE_GOOGLE_MAPS_API_KEY }}
          VITE_SENTRY_DSN: ${{ secrets.VITE_SENTRY_DSN }}
        run: npm run build
      
      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v2
        with:
          publish-dir: './frontend/dist'
          production-branch: main
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy from GitHub Actions - ${{ github.event.head_commit.message }}"
          enable-pull-request-comment: true
          enable-commit-comment: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 10
      
      - name: Deploy to Vercel (Alternative)
        continue-on-error: true
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./frontend
          vercel-args: '--prod'
      
      - name: Verify deployment
        continue-on-error: true
        env:
          FRONTEND_URL: ${{ secrets.FRONTEND_URL }}
        run: |
          if [ -n "$FRONTEND_URL" ]; then
            sleep 30
            curl -f $FRONTEND_URL || exit 1
          else
            echo "FRONTEND_URL not configured, skipping verification"
          fi

  notify:
    name: Notify Deployment Status
    runs-on: ubuntu-latest
    needs: [deploy-backend, deploy-frontend]
    if: always()
    
    steps:
      - name: Send Slack notification
        continue-on-error: true
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          text: |
            Deployment Status: ${{ job.status }}
            Backend: ${{ needs.deploy-backend.result }}
            Frontend: ${{ needs.deploy-frontend.result }}
            Commit: ${{ github.event.head_commit.message }}
          webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
      
      - name: Create deployment summary
        run: |
          echo "## Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Backend**: ${{ needs.deploy-backend.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Frontend**: ${{ needs.deploy-frontend.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Author**: ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Message**: ${{ github.event.head_commit.message }}" >> $GITHUB_STEP_SUMMARY
